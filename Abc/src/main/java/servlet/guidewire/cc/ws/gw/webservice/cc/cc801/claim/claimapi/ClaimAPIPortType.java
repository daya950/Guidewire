
package servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import servlet.guidewire.cc.typekey.ClaimClosedOutcomeType;
import servlet.guidewire.cc.typekey.ClaimReopenedReason;
import servlet.guidewire.cc.typekey.ClaimState;
import servlet.guidewire.cc.typekey.CustomHistoryType;
import servlet.guidewire.cc.typekey.ExposureClosedOutcomeType;
import servlet.guidewire.cc.typekey.ExposureReopenedReason;
import servlet.guidewire.cc.typekey.ExposureState;
import servlet.guidewire.cc.typekey.ValidationLevel;
import servlet.guidewire.cc.ws.gw.webservice.cc.cc801.dto.activitydto.ActivityDTO;
import servlet.guidewire.cc.ws.gw.webservice.cc.cc801.dto.activitypatterndto.ActivityPatternDTO;
import servlet.guidewire.cc.ws.gw.webservice.cc.cc801.dto.claimdto.ClaimDTO;
import servlet.guidewire.cc.ws.gw.webservice.cc.cc801.dto.claiminfodto.ClaimInfoDTO;
import servlet.guidewire.cc.ws.gw.webservice.cc.cc801.dto.contactdto.ContactDTO;
import servlet.guidewire.cc.ws.gw.webservice.cc.cc801.dto.documentdto.DocumentDTO;
import servlet.guidewire.cc.ws.gw.webservice.cc.cc801.dto.exposuredto.ExposureDTO;
import servlet.guidewire.cc.ws.gw.webservice.cc.cc801.dto.notedto.NoteDTO;
import servlet.guidewire.cc.ws.gw.webservice.cc.cc801.dto.policydto.PolicyDTO;
import servlet.guidewire.cc.ws.gw.webservice.cc.cc801.dto.policysummarydto.PolicySummaryDTO;
import servlet.guidewire.gw.api.tools.ProcessID;
import servlet.guidewire.gw.plugin.assignment.AssignmentResponse;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ClaimAPIPortType", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
@XmlSeeAlso({
    servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.ObjectFactory.class,
    servlet.guidewire.cc.ws.gw.webservice.cc.cc801.dto.claimcontactdto.ObjectFactory.class,
    servlet.guidewire.cc.ws.gw.webservice.cc.cc801.dto.incidentdto.ObjectFactory.class,
    servlet.guidewire.cc.ws.gw.webservice.cc.cc801.dto.claiminfodto.ObjectFactory.class,
    servlet.guidewire.cc.ws.gw.webservice.cc.cc801.dto.activitydto.ObjectFactory.class,
    servlet.guidewire.cc.ws.gw.webservice.cc.cc801.dto.exposuredto.ObjectFactory.class,
    servlet.guidewire.cc.ws.gw.webservice.cc.cc801.dto.policysummarydto.ObjectFactory.class,
    servlet.guidewire.cc.ws.gw.webservice.cc.cc801.dto.policydto.ObjectFactory.class,
    servlet.guidewire.cc.ws.gw.webservice.cc.cc801.dto.claimdto.ObjectFactory.class,
    servlet.guidewire.cc.ws.gw.webservice.cc.cc801.dto.activitypatterndto.ObjectFactory.class,
    servlet.guidewire.cc.ws.gw.webservice.cc.cc801.dto.claimcontactroledto.ObjectFactory.class,
    servlet.guidewire.cc.ws.gw.webservice.cc.cc801.dto.contactdto.ObjectFactory.class,
    servlet.guidewire.cc.ws.gw.webservice.cc.cc801.dto.documentdto.ObjectFactory.class,
    servlet.guidewire.cc.ws.gw.webservice.cc.cc801.dto.notedto.ObjectFactory.class,
    servlet.guidewire.gw.api.tools.ObjectFactory.class,
    servlet.guidewire.gw.plugin.assignment.ObjectFactory.class,
    servlet.guidewire.ws.soapheaders.ObjectFactory.class,
    servlet.guidewire.cc.typekey.ObjectFactory.class
})
public interface ClaimAPIPortType {


    /**
     * 
     * @param activityID
     * @throws PermissionException_Exception
     * @throws BadIdentifierException_Exception
     * @throws WsiAuthenticationException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "completeActivity", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.CompleteActivity")
    @ResponseWrapper(localName = "completeActivityResponse", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.CompleteActivityResponse")
    public void completeActivity(
        @WebParam(name = "activityID", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        String activityID)
        throws BadIdentifierException_Exception, PermissionException_Exception, WsiAuthenticationException_Exception
    ;

    /**
     * 
     * @param dto
     * @return
     *     returns java.lang.String
     * @throws PermissionException_Exception
     * @throws IllegalArgumentException_Exception
     * @throws WsiAuthenticationException_Exception
     * @throws BadIdentifierException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
    @RequestWrapper(localName = "createActivity", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.CreateActivity")
    @ResponseWrapper(localName = "createActivityResponse", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.CreateActivityResponse")
    public String createActivity(
        @WebParam(name = "dto", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        ActivityDTO dto)
        throws BadIdentifierException_Exception, IllegalArgumentException_Exception, PermissionException_Exception, WsiAuthenticationException_Exception
    ;

    /**
     * 
     * @param patternID
     * @param claimID
     * @return
     *     returns java.lang.String
     * @throws EntityStateException_Exception
     * @throws PermissionException_Exception
     * @throws WsiAuthenticationException_Exception
     * @throws BadIdentifierException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
    @RequestWrapper(localName = "createActivityFromPattern", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.CreateActivityFromPattern")
    @ResponseWrapper(localName = "createActivityFromPatternResponse", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.CreateActivityFromPatternResponse")
    public String createActivityFromPattern(
        @WebParam(name = "claimID", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        String claimID,
        @WebParam(name = "patternID", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        String patternID)
        throws BadIdentifierException_Exception, EntityStateException_Exception, PermissionException_Exception, WsiAuthenticationException_Exception
    ;

    /**
     * 
     * @param aCode
     * @return
     *     returns servlet.guidewire.cc.ws.gw.webservice.cc.cc801.dto.activitypatterndto.ActivityPatternDTO
     * @throws WsiAuthenticationException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
    @RequestWrapper(localName = "getActivityPatternDataForCode", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.GetActivityPatternDataForCode")
    @ResponseWrapper(localName = "getActivityPatternDataForCodeResponse", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.GetActivityPatternDataForCodeResponse")
    public ActivityPatternDTO getActivityPatternDataForCode(
        @WebParam(name = "aCode", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        String aCode)
        throws WsiAuthenticationException_Exception
    ;

    /**
     * 
     * @param publicID
     * @return
     *     returns servlet.guidewire.cc.ws.gw.webservice.cc.cc801.dto.activitypatterndto.ActivityPatternDTO
     * @throws WsiAuthenticationException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
    @RequestWrapper(localName = "getActivityPatternData", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.GetActivityPatternData")
    @ResponseWrapper(localName = "getActivityPatternDataResponse", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.GetActivityPatternDataResponse")
    public ActivityPatternDTO getActivityPatternData(
        @WebParam(name = "publicID", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        String publicID)
        throws WsiAuthenticationException_Exception
    ;

    /**
     * 
     * @param activityID
     * @throws PermissionException_Exception
     * @throws WsiAuthenticationException_Exception
     * @throws BadIdentifierException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "skipActivity", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.SkipActivity")
    @ResponseWrapper(localName = "skipActivityResponse", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.SkipActivityResponse")
    public void skipActivity(
        @WebParam(name = "activityID", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        String activityID)
        throws BadIdentifierException_Exception, PermissionException_Exception, WsiAuthenticationException_Exception
    ;

    /**
     * 
     * @param claimID
     * @return
     *     returns servlet.guidewire.cc.ws.gw.webservice.cc.cc801.dto.claimdto.ClaimDTO
     * @throws PermissionException_Exception
     * @throws WsiAuthenticationException_Exception
     * @throws BadIdentifierException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
    @RequestWrapper(localName = "getDtoForClaim", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.GetDtoForClaim")
    @ResponseWrapper(localName = "getDtoForClaimResponse", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.GetDtoForClaimResponse")
    public ClaimDTO getDtoForClaim(
        @WebParam(name = "claimID", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        String claimID)
        throws BadIdentifierException_Exception, PermissionException_Exception, WsiAuthenticationException_Exception
    ;

    /**
     * 
     * @param claimDTO
     * @param policyDTO
     * @return
     *     returns java.lang.String
     * @throws PermissionException_Exception
     * @throws DuplicateKeyException_Exception
     * @throws RequiredFieldException_Exception
     * @throws WsiAuthenticationException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
    @RequestWrapper(localName = "addFNOL", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.AddFNOL")
    @ResponseWrapper(localName = "addFNOLResponse", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.AddFNOLResponse")
    public String addFNOL(
        @WebParam(name = "claimDTO", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        ClaimDTO claimDTO,
        @WebParam(name = "policyDTO", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        PolicyDTO policyDTO)
        throws DuplicateKeyException_Exception, PermissionException_Exception, RequiredFieldException_Exception, WsiAuthenticationException_Exception
    ;

    /**
     * 
     * @param xml
     * @param mapperClassName
     * @return
     *     returns java.lang.String
     * @throws WsiAuthenticationException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
    @RequestWrapper(localName = "importClaimFromXML", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.ImportClaimFromXML")
    @ResponseWrapper(localName = "importClaimFromXMLResponse", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.ImportClaimFromXMLResponse")
    public String importClaimFromXML(
        @WebParam(name = "xml", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        String xml,
        @WebParam(name = "mapperClassName", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        String mapperClassName)
        throws WsiAuthenticationException_Exception
    ;

    /**
     * 
     * @param xml
     * @return
     *     returns java.lang.String
     * @throws PermissionException_Exception
     * @throws DuplicateKeyException_Exception
     * @throws RequiredFieldException_Exception
     * @throws WsiAuthenticationException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
    @RequestWrapper(localName = "importAcordClaimFromXML", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.ImportAcordClaimFromXML")
    @ResponseWrapper(localName = "importAcordClaimFromXMLResponse", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.ImportAcordClaimFromXMLResponse")
    public String importAcordClaimFromXML(
        @WebParam(name = "xml", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        String xml)
        throws DuplicateKeyException_Exception, PermissionException_Exception, RequiredFieldException_Exception, WsiAuthenticationException_Exception
    ;

    /**
     * 
     * @param claimDTO
     * @param policyDTO
     * @return
     *     returns java.lang.String
     * @throws PermissionException_Exception
     * @throws WsiAuthenticationException_Exception
     * @throws BadIdentifierException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
    @RequestWrapper(localName = "migrateClaim", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.MigrateClaim")
    @ResponseWrapper(localName = "migrateClaimResponse", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.MigrateClaimResponse")
    public String migrateClaim(
        @WebParam(name = "claimDTO", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        ClaimDTO claimDTO,
        @WebParam(name = "policyDTO", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        PolicyDTO policyDTO)
        throws BadIdentifierException_Exception, PermissionException_Exception, WsiAuthenticationException_Exception
    ;

    /**
     * 
     * @param claimID
     * @return
     *     returns boolean
     * @throws WsiAuthenticationException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
    @RequestWrapper(localName = "doesExist", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.DoesExist")
    @ResponseWrapper(localName = "doesExistResponse", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.DoesExistResponse")
    public boolean doesExist(
        @WebParam(name = "claimID", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        String claimID)
        throws WsiAuthenticationException_Exception
    ;

    /**
     * 
     * @param claimNumbers
     * @return
     *     returns servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.ClaimsExistResponse.Return
     * @throws WsiAuthenticationException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
    @RequestWrapper(localName = "claimsExist", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.ClaimsExist")
    @ResponseWrapper(localName = "claimsExistResponse", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.ClaimsExistResponse")
    public servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.ClaimsExistResponse.Return claimsExist(
        @WebParam(name = "claimNumbers", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.ClaimsExist.ClaimNumbers claimNumbers)
        throws WsiAuthenticationException_Exception
    ;

    /**
     * 
     * @param validationLevel
     * @param claimID
     * @return
     *     returns boolean
     * @throws PermissionException_Exception
     * @throws BadIdentifierException_Exception
     * @throws WsiAuthenticationException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
    @RequestWrapper(localName = "checkValid", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.CheckValid")
    @ResponseWrapper(localName = "checkValidResponse", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.CheckValidResponse")
    public boolean checkValid(
        @WebParam(name = "claimID", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        String claimID,
        @WebParam(name = "validationLevel", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        ValidationLevel validationLevel)
        throws BadIdentifierException_Exception, PermissionException_Exception, WsiAuthenticationException_Exception
    ;

    /**
     * @deprecated: Use {@link gw.webservice.cc.cc801.claim.ClaimAPI#startClaimValidation(java.lang.String)} instead.
     * 
     * @param loadCommandID
     * @return
     *     returns long
     * @throws WsiAuthenticationException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
    @RequestWrapper(localName = "bulkValidate", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.BulkValidate")
    @ResponseWrapper(localName = "bulkValidateResponse", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.BulkValidateResponse")
    public long bulkValidate(
        @WebParam(name = "loadCommandID", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        long loadCommandID)
        throws WsiAuthenticationException_Exception
    ;

    /**
     * 
     * @param loadCommandPublicID
     * @return
     *     returns servlet.guidewire.gw.api.tools.ProcessID
     * @throws WsiAuthenticationException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
    @RequestWrapper(localName = "startClaimValidation", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.StartClaimValidation")
    @ResponseWrapper(localName = "startClaimValidationResponse", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.StartClaimValidationResponse")
    public ProcessID startClaimValidation(
        @WebParam(name = "loadCommandPublicID", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        String loadCommandPublicID)
        throws WsiAuthenticationException_Exception
    ;

    /**
     * 
     * @param claimID
     * @return
     *     returns boolean
     * @throws WsiAuthenticationException_Exception
     * @throws BadIdentifierException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
    @RequestWrapper(localName = "isFlagged", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.IsFlagged")
    @ResponseWrapper(localName = "isFlaggedResponse", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.IsFlaggedResponse")
    public boolean isFlagged(
        @WebParam(name = "claimID", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        String claimID)
        throws BadIdentifierException_Exception, WsiAuthenticationException_Exception
    ;

    /**
     * 
     * @param claimID
     * @return
     *     returns servlet.guidewire.gw.plugin.assignment.AssignmentResponse
     * @throws WsiAuthenticationException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
    @RequestWrapper(localName = "previewAssignment", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.PreviewAssignment")
    @ResponseWrapper(localName = "previewAssignmentResponse", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.PreviewAssignmentResponse")
    public AssignmentResponse previewAssignment(
        @WebParam(name = "claimID", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        String claimID)
        throws WsiAuthenticationException_Exception
    ;

    /**
     * 
     * @param outcomeType
     * @param reason
     * @param claimID
     * @throws PermissionException_Exception
     * @throws BadIdentifierException_Exception
     * @throws WsiAuthenticationException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "closeClaim", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.CloseClaim")
    @ResponseWrapper(localName = "closeClaimResponse", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.CloseClaimResponse")
    public void closeClaim(
        @WebParam(name = "claimID", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        String claimID,
        @WebParam(name = "outcomeType", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        ClaimClosedOutcomeType outcomeType,
        @WebParam(name = "reason", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        String reason)
        throws BadIdentifierException_Exception, PermissionException_Exception, WsiAuthenticationException_Exception
    ;

    /**
     * 
     * @param reason
     * @param claimID
     * @param reasonType
     * @throws PermissionException_Exception
     * @throws WsiAuthenticationException_Exception
     * @throws BadIdentifierException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "reopenClaim", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.ReopenClaim")
    @ResponseWrapper(localName = "reopenClaimResponse", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.ReopenClaimResponse")
    public void reopenClaim(
        @WebParam(name = "claimID", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        String claimID,
        @WebParam(name = "reasonType", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        ClaimReopenedReason reasonType,
        @WebParam(name = "reason", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        String reason)
        throws BadIdentifierException_Exception, PermissionException_Exception, WsiAuthenticationException_Exception
    ;

    /**
     * 
     * @param claimID
     * @return
     *     returns servlet.guidewire.cc.typekey.ClaimState
     * @throws PermissionException_Exception
     * @throws WsiAuthenticationException_Exception
     * @throws BadIdentifierException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
    @RequestWrapper(localName = "getClaimState", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.GetClaimState")
    @ResponseWrapper(localName = "getClaimStateResponse", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.GetClaimStateResponse")
    public ClaimState getClaimState(
        @WebParam(name = "claimID", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        String claimID)
        throws BadIdentifierException_Exception, PermissionException_Exception, WsiAuthenticationException_Exception
    ;

    /**
     * 
     * @param claimID
     * @throws PermissionException_Exception
     * @throws WsiAuthenticationException_Exception
     * @throws BadIdentifierException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "refreshPolicy", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.RefreshPolicy")
    @ResponseWrapper(localName = "refreshPolicyResponse", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.RefreshPolicyResponse")
    public void refreshPolicy(
        @WebParam(name = "claimID", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        String claimID)
        throws BadIdentifierException_Exception, PermissionException_Exception, WsiAuthenticationException_Exception
    ;

    /**
     * 
     * @param claimID
     * @param policySummaryDTO
     * @throws PermissionException_Exception
     * @throws BadIdentifierException_Exception
     * @throws WsiAuthenticationException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "setPolicy", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.SetPolicy")
    @ResponseWrapper(localName = "setPolicyResponse", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.SetPolicyResponse")
    public void setPolicy(
        @WebParam(name = "claimID", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        String claimID,
        @WebParam(name = "policySummaryDTO", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        PolicySummaryDTO policySummaryDTO)
        throws BadIdentifierException_Exception, PermissionException_Exception, WsiAuthenticationException_Exception
    ;

    /**
     * 
     * @param claimNumber
     * @return
     *     returns java.lang.String
     * @throws WsiAuthenticationException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
    @RequestWrapper(localName = "findPublicIDByClaimNumber", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.FindPublicIDByClaimNumber")
    @ResponseWrapper(localName = "findPublicIDByClaimNumberResponse", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.FindPublicIDByClaimNumberResponse")
    public String findPublicIDByClaimNumber(
        @WebParam(name = "claimNumber", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        String claimNumber)
        throws WsiAuthenticationException_Exception
    ;

    /**
     * 
     * @param claimID
     * @param accessTypes
     * @param userID
     * @throws BadIdentifierException_Exception
     * @throws WsiAuthenticationException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "giveUserPermissionsOnClaim", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.GiveUserPermissionsOnClaim")
    @ResponseWrapper(localName = "giveUserPermissionsOnClaimResponse", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.GiveUserPermissionsOnClaimResponse")
    public void giveUserPermissionsOnClaim(
        @WebParam(name = "claimID", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        String claimID,
        @WebParam(name = "userID", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        String userID,
        @WebParam(name = "accessTypes", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.GiveUserPermissionsOnClaim.AccessTypes accessTypes)
        throws BadIdentifierException_Exception, WsiAuthenticationException_Exception
    ;

    /**
     * 
     * @param claimNumbers
     * @throws PermissionException_Exception
     * @throws WsiAuthenticationException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "scheduleForArchive", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.ScheduleForArchive")
    @ResponseWrapper(localName = "scheduleForArchiveResponse", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.ScheduleForArchiveResponse")
    public void scheduleForArchive(
        @WebParam(name = "claimNumbers", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.ScheduleForArchive.ClaimNumbers claimNumbers)
        throws PermissionException_Exception, WsiAuthenticationException_Exception
    ;

    /**
     * 
     * @param publicIDs
     * @throws PermissionException_Exception
     * @throws WsiAuthenticationException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "scheduleForArchiveByPublicID", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.ScheduleForArchiveByPublicID")
    @ResponseWrapper(localName = "scheduleForArchiveByPublicIDResponse", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.ScheduleForArchiveByPublicIDResponse")
    public void scheduleForArchiveByPublicID(
        @WebParam(name = "publicIDs", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.ScheduleForArchiveByPublicID.PublicIDs publicIDs)
        throws PermissionException_Exception, WsiAuthenticationException_Exception
    ;

    /**
     * 
     * @param claimIDs
     * @param comment
     * @return
     *     returns servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.RestoreClaimsResponse.Return
     * @throws WsiAuthenticationException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
    @RequestWrapper(localName = "restoreClaims", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.RestoreClaims")
    @ResponseWrapper(localName = "restoreClaimsResponse", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.RestoreClaimsResponse")
    public servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.RestoreClaimsResponse.Return restoreClaims(
        @WebParam(name = "claimIDs", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.RestoreClaims.ClaimIDs claimIDs,
        @WebParam(name = "comment", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        String comment)
        throws WsiAuthenticationException_Exception
    ;

    /**
     * 
     * @param claimID
     * @return
     *     returns servlet.guidewire.cc.ws.gw.webservice.cc.cc801.dto.claiminfodto.ClaimInfoDTO
     * @throws PermissionException_Exception
     * @throws WsiAuthenticationException_Exception
     * @throws BadIdentifierException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
    @RequestWrapper(localName = "getClaimInfo", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.GetClaimInfo")
    @ResponseWrapper(localName = "getClaimInfoResponse", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.GetClaimInfoResponse")
    public ClaimInfoDTO getClaimInfo(
        @WebParam(name = "claimID", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        String claimID)
        throws BadIdentifierException_Exception, PermissionException_Exception, WsiAuthenticationException_Exception
    ;

    /**
     * 
     * @param dto
     * @return
     *     returns java.lang.String
     * @throws BadIdentifierException_Exception
     * @throws WsiAuthenticationException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
    @RequestWrapper(localName = "createContact", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.CreateContact")
    @ResponseWrapper(localName = "createContactResponse", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.CreateContactResponse")
    public String createContact(
        @WebParam(name = "dto", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        ContactDTO dto)
        throws BadIdentifierException_Exception, WsiAuthenticationException_Exception
    ;

    /**
     * 
     * @param dto
     * @return
     *     returns java.lang.String
     * @throws PermissionException_Exception
     * @throws IllegalArgumentException_Exception
     * @throws BadIdentifierException_Exception
     * @throws WsiAuthenticationException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
    @RequestWrapper(localName = "createDocument", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.CreateDocument")
    @ResponseWrapper(localName = "createDocumentResponse", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.CreateDocumentResponse")
    public String createDocument(
        @WebParam(name = "dto", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        DocumentDTO dto)
        throws BadIdentifierException_Exception, IllegalArgumentException_Exception, PermissionException_Exception, WsiAuthenticationException_Exception
    ;

    /**
     * 
     * @param dto
     * @return
     *     returns java.lang.String
     * @throws EntityStateException_Exception
     * @throws PermissionException_Exception
     * @throws BadIdentifierException_Exception
     * @throws WsiAuthenticationException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
    @RequestWrapper(localName = "createExposure", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.CreateExposure")
    @ResponseWrapper(localName = "createExposureResponse", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.CreateExposureResponse")
    public String createExposure(
        @WebParam(name = "dto", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        ExposureDTO dto)
        throws BadIdentifierException_Exception, EntityStateException_Exception, PermissionException_Exception, WsiAuthenticationException_Exception
    ;

    /**
     * 
     * @param exposures
     * @param claimID
     * @return
     *     returns servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.CreateExposuresResponse.Return
     * @throws EntityStateException_Exception
     * @throws PermissionException_Exception
     * @throws BadIdentifierException_Exception
     * @throws WsiAuthenticationException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
    @RequestWrapper(localName = "createExposures", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.CreateExposures")
    @ResponseWrapper(localName = "createExposuresResponse", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.CreateExposuresResponse")
    public servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.CreateExposuresResponse.Return createExposures(
        @WebParam(name = "claimID", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        String claimID,
        @WebParam(name = "exposures", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.CreateExposures.Exposures exposures)
        throws BadIdentifierException_Exception, EntityStateException_Exception, PermissionException_Exception, WsiAuthenticationException_Exception
    ;

    /**
     * 
     * @param exposureID
     * @return
     *     returns servlet.guidewire.cc.ws.gw.webservice.cc.cc801.dto.exposuredto.ExposureDTO
     * @throws PermissionException_Exception
     * @throws BadIdentifierException_Exception
     * @throws WsiAuthenticationException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
    @RequestWrapper(localName = "getDtoForExposure", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.GetDtoForExposure")
    @ResponseWrapper(localName = "getDtoForExposureResponse", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.GetDtoForExposureResponse")
    public ExposureDTO getDtoForExposure(
        @WebParam(name = "exposureID", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        String exposureID)
        throws BadIdentifierException_Exception, PermissionException_Exception, WsiAuthenticationException_Exception
    ;

    /**
     * 
     * @param exposureID
     * @return
     *     returns servlet.guidewire.cc.typekey.ExposureState
     * @throws IllegalArgumentException_Exception
     * @throws WsiAuthenticationException_Exception
     * @throws BadIdentifierException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
    @RequestWrapper(localName = "getExposureState", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.GetExposureState")
    @ResponseWrapper(localName = "getExposureStateResponse", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.GetExposureStateResponse")
    public ExposureState getExposureState(
        @WebParam(name = "exposureID", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        String exposureID)
        throws BadIdentifierException_Exception, IllegalArgumentException_Exception, WsiAuthenticationException_Exception
    ;

    /**
     * 
     * @param reason
     * @param exposureID
     * @param reasonType
     * @throws PermissionException_Exception
     * @throws IllegalArgumentException_Exception
     * @throws BadIdentifierException_Exception
     * @throws WsiAuthenticationException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "reopenExposure", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.ReopenExposure")
    @ResponseWrapper(localName = "reopenExposureResponse", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.ReopenExposureResponse")
    public void reopenExposure(
        @WebParam(name = "exposureID", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        String exposureID,
        @WebParam(name = "reasonType", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        ExposureReopenedReason reasonType,
        @WebParam(name = "reason", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        String reason)
        throws BadIdentifierException_Exception, IllegalArgumentException_Exception, PermissionException_Exception, WsiAuthenticationException_Exception
    ;

    /**
     * 
     * @param reason
     * @param exposureID
     * @param outcome
     * @throws PermissionException_Exception
     * @throws IllegalArgumentException_Exception
     * @throws BadIdentifierException_Exception
     * @throws WsiAuthenticationException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "closeExposure", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.CloseExposure")
    @ResponseWrapper(localName = "closeExposureResponse", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.CloseExposureResponse")
    public void closeExposure(
        @WebParam(name = "exposureID", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        String exposureID,
        @WebParam(name = "outcome", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        ExposureClosedOutcomeType outcome,
        @WebParam(name = "reason", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        String reason)
        throws BadIdentifierException_Exception, IllegalArgumentException_Exception, PermissionException_Exception, WsiAuthenticationException_Exception
    ;

    /**
     * 
     * @param historyType
     * @param claimID
     * @return
     *     returns java.lang.String
     * @throws PermissionException_Exception
     * @throws WsiAuthenticationException_Exception
     * @throws BadIdentifierException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
    @RequestWrapper(localName = "createCustomHistory", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.CreateCustomHistory")
    @ResponseWrapper(localName = "createCustomHistoryResponse", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.CreateCustomHistoryResponse")
    public String createCustomHistory(
        @WebParam(name = "claimID", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        String claimID,
        @WebParam(name = "historyType", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        CustomHistoryType historyType)
        throws BadIdentifierException_Exception, PermissionException_Exception, WsiAuthenticationException_Exception
    ;

    /**
     * 
     * @param historyType
     * @param description
     * @param claimID
     * @return
     *     returns java.lang.String
     * @throws PermissionException_Exception
     * @throws BadIdentifierException_Exception
     * @throws WsiAuthenticationException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
    @RequestWrapper(localName = "createCustomHistoryWithDesc", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.CreateCustomHistoryWithDesc")
    @ResponseWrapper(localName = "createCustomHistoryWithDescResponse", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.CreateCustomHistoryWithDescResponse")
    public String createCustomHistoryWithDesc(
        @WebParam(name = "claimID", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        String claimID,
        @WebParam(name = "historyType", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        CustomHistoryType historyType,
        @WebParam(name = "description", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        String description)
        throws BadIdentifierException_Exception, PermissionException_Exception, WsiAuthenticationException_Exception
    ;

    /**
     * 
     * @param dto
     * @return
     *     returns java.lang.String
     * @throws PermissionException_Exception
     * @throws IllegalArgumentException_Exception
     * @throws BadIdentifierException_Exception
     * @throws WsiAuthenticationException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
    @RequestWrapper(localName = "createNote", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.CreateNote")
    @ResponseWrapper(localName = "createNoteResponse", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI", className = "servlet.guidewire.cc.ws.gw.webservice.cc.cc801.claim.claimapi.CreateNoteResponse")
    public String createNote(
        @WebParam(name = "dto", targetNamespace = "http://guidewire.com/cc/ws/gw/webservice/cc/cc801/claim/ClaimAPI")
        NoteDTO dto)
        throws BadIdentifierException_Exception, IllegalArgumentException_Exception, PermissionException_Exception, WsiAuthenticationException_Exception
    ;

}
